{"ast":null,"code":"var _jsxFileName = \"/home/homepc/Documents/courses/skillup/2107_jul_2021_JS/06-lesson. REST_API/lesson-06/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ArticleList from \"./ArticlesList\";\nimport SearchForm from \"./SearchForm\";\nimport Notification from \"./Notification\";\nimport Spinner from \"./Spinner\";\nimport arcticlesApi from \"../services/arcticlesApi\"; // arcticlesApi = { fetchArticlesWithAutor, fetchArticlesWithQuery };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      error: false,\n      loading: false,\n      searchQuery: \"\",\n      page: 0\n    };\n\n    this.fetchArticles = () => {\n      let {\n        searchQuery,\n        page\n      } = this.state;\n      arcticlesApi.fetchArticlesWithQuery(searchQuery, page).then(articles => {\n        this.setState(prevState => {\n          return {\n            articles: [...prevState.articles, ...articles],\n            page: prevState.page + 1\n          };\n        });\n      });\n    };\n\n    this.handleSearchForm = query => {\n      // console.log(\"inputValue form\", query);\n      this.setState({\n        searchQuery: query\n      });\n    };\n  }\n\n  // componentDidMount() {\n  //     console.log(arcticlesApi);\n  //     console.log(arcticlesApi.fetchArticlesWithQuery());\n  //     this.setState({ loading: true });\n  //     axios\n  //         .get(\"http://hn.algolia.com/api/v1/search?query=covid\")\n  //         .then((response) => {\n  //             // console.log(response);\n  //             this.setState({\n  //                 articles: response.data.hits,\n  //                 // loading: false,\n  //             });\n  //         })\n  //         .catch((error) => {\n  //             // console.log(error.message);\n  //             this.setState({\n  //                 error,\n  //                 // loading: false\n  //             });\n  //         })\n  //         .finally(() => this.setState({ loading: false }));\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"prevState\", prevState);\n    let prevQuery = prevState.searchQuery;\n    let currentQuery = this.state.searchQuery;\n\n    if (prevQuery !== currentQuery) {\n      console.log(\"Можно делать запрос\");\n      this.fetchArticles();\n    }\n  }\n\n  render() {\n    let {\n      articles,\n      loading,\n      error\n    } = this.state;\n    let errorMSG = `Shit hepens...${error.message}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"https://hn.algolia.com/api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n        onSubmit: this.handleSearchForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n        message: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Notification, {\n        message: errorMSG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }, this), articles.length > 0 && /*#__PURE__*/_jsxDEV(ArticleList, {\n        articles: articles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/homepc/Documents/courses/skillup/2107_jul_2021_JS/06-lesson. REST_API/lesson-06/src/components/App.js"],"names":["React","Component","axios","ArticleList","SearchForm","Notification","Spinner","arcticlesApi","App","state","articles","error","loading","searchQuery","page","fetchArticles","fetchArticlesWithQuery","then","setState","prevState","handleSearchForm","query","componentDidUpdate","prevProps","prevQuery","currentQuery","console","log","render","errorMSG","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,YAAP,MAAyB,0BAAzB,C,CACA;;;AAEA,eAAe,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACvCQ,KADuC,GAC/B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,WAAW,EAAE,EAJT;AAKJC,MAAAA,IAAI,EAAE;AALF,KAD+B;;AAAA,SA+CvCC,aA/CuC,GA+CvB,MAAM;AAClB,UAAI;AAAEF,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAwB,KAAKL,KAAjC;AACAF,MAAAA,YAAY,CACPS,sBADL,CAC4BH,WAD5B,EACyCC,IADzC,EAEKG,IAFL,CAEWP,QAAD,IAAc;AAChB,aAAKQ,QAAL,CAAeC,SAAD,IAAe;AACzB,iBAAO;AACHT,YAAAA,QAAQ,EAAE,CAAC,GAAGS,SAAS,CAACT,QAAd,EAAwB,GAAGA,QAA3B,CADP;AAEHI,YAAAA,IAAI,EAAEK,SAAS,CAACL,IAAV,GAAiB;AAFpB,WAAP;AAIH,SALD;AAMH,OATL;AAUH,KA3DsC;;AAAA,SAsEvCM,gBAtEuC,GAsEnBC,KAAD,IAAW;AAC1B;AACA,WAAKH,QAAL,CAAc;AACVL,QAAAA,WAAW,EAAEQ;AADH,OAAd;AAGH,KA3EsC;AAAA;;AASvC;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,kBAAkB,CAACC,SAAD,EAAYJ,SAAZ,EAAuB;AACrC;AACA,QAAIK,SAAS,GAAGL,SAAS,CAACN,WAA1B;AACA,QAAIY,YAAY,GAAG,KAAKhB,KAAL,CAAWI,WAA9B;;AAEA,QAAIW,SAAS,KAAKC,YAAlB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,WAAKZ,aAAL;AACH;AACJ;;AAgCDa,EAAAA,MAAM,GAAG;AACL,QAAI;AAAElB,MAAAA,QAAF;AAAYE,MAAAA,OAAZ;AAAqBD,MAAAA;AAArB,QAA+B,KAAKF,KAAxC;AACA,QAAIoB,QAAQ,GAAI,iBAAgBlB,KAAK,CAACmB,OAAQ,EAA9C;AAEA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKV;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKR,OAAO,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHhB,EAIKD,KAAK,iBAAI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEkB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJd,EAKKnB,QAAQ,CAACqB,MAAT,GAAkB,CAAlB,iBAAuB,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAErB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAL5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA1FsC","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport ArticleList from \"./ArticlesList\";\nimport SearchForm from \"./SearchForm\";\nimport Notification from \"./Notification\";\nimport Spinner from \"./Spinner\";\n\nimport arcticlesApi from \"../services/arcticlesApi\";\n// arcticlesApi = { fetchArticlesWithAutor, fetchArticlesWithQuery };\n\nexport default class App extends Component {\n    state = {\n        articles: [],\n        error: false,\n        loading: false,\n        searchQuery: \"\",\n        page: 0,\n    };\n\n    // componentDidMount() {\n    //     console.log(arcticlesApi);\n    //     console.log(arcticlesApi.fetchArticlesWithQuery());\n\n    //     this.setState({ loading: true });\n\n    //     axios\n    //         .get(\"http://hn.algolia.com/api/v1/search?query=covid\")\n    //         .then((response) => {\n    //             // console.log(response);\n    //             this.setState({\n    //                 articles: response.data.hits,\n    //                 // loading: false,\n    //             });\n    //         })\n    //         .catch((error) => {\n    //             // console.log(error.message);\n\n    //             this.setState({\n    //                 error,\n    //                 // loading: false\n    //             });\n    //         })\n    //         .finally(() => this.setState({ loading: false }));\n    // }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(\"prevState\", prevState);\n        let prevQuery = prevState.searchQuery;\n        let currentQuery = this.state.searchQuery;\n\n        if (prevQuery !== currentQuery) {\n            console.log(\"Можно делать запрос\");\n\n            this.fetchArticles();\n        }\n    }\n\n    fetchArticles = () => {\n        let { searchQuery, page } = this.state;\n        arcticlesApi\n            .fetchArticlesWithQuery(searchQuery, page)\n            .then((articles) => {\n                this.setState((prevState) => {\n                    return {\n                        articles: [...prevState.articles, ...articles],\n                        page: prevState.page + 1,\n                    };\n                });\n            });\n    };\n\n    // fetchArticles = () => {\n    //     let { searchQuery, page } = this.state;\n    //     arcticlesApi.fetchArticlesWithQuery(searchQuery).then((articles) => {\n    //         this.setState({\n    //             articles: articles\n    //         });\n    //     });\n    // };\n\n    handleSearchForm = (query) => {\n        // console.log(\"inputValue form\", query);\n        this.setState({\n            searchQuery: query,\n        });\n    };\n\n    render() {\n        let { articles, loading, error } = this.state;\n        let errorMSG = `Shit hepens...${error.message}`;\n\n        return (\n            <div>\n                <h1>https://hn.algolia.com/api</h1>\n                <SearchForm onSubmit={this.handleSearchForm} />\n                {loading && <Spinner message=\"Loading...\" />}\n                {error && <Notification message={errorMSG} />}\n                {articles.length > 0 && <ArticleList articles={articles} />}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}