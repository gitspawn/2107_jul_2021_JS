{"ast":null,"code":"var _jsxFileName = \"/home/homepc/Documents/courses/skillup/2107_jul_2021_JS/06-lesson. REST_API/lesson-06/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Layout from \"./Layout\"; // import Tasks from \"./Tasks/\";\n// import Modal from \"./Modal\";\n// import Clock from \"./Clock\";\n\nimport Tabs from \"./Tabs\";\nimport tabs from \"../tabs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        items: tabs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Timer\n// export default class App extends Component {\n//     state = {\n//         showClock: false,\n//     };\n//     toggleClock = () => {\n//         this.setState((prevState, props) => {\n//             return {\n//                 showClock: !prevState.showClock,\n//             };\n//         });\n//     };\n//     render() {\n//         let { showClock } = this.state;\n//         return (\n//             <Layout>\n//                 {!showClock && (\n//                     <button type=\"button\" onClick={this.toggleClock}>\n//                         Close Clock\n//                     </button>\n//                 )}\n//                 {!showClock && <Clock />}\n//             </Layout>\n//         );\n//     }\n// }\n// Modal\n// export default class App extends Component {\n//     state = {\n//         showModal: false,\n//     };\n//     toggleModal = () => {\n//         this.setState((prevState, props) => {\n//             return {\n//                 showModal: !prevState.showModal,\n//             };\n//         });\n//     };\n//     render() {\n//         let { showModal } = this.state;\n//         return (\n//             <Layout>\n//                 {/* <Tasks /> */}\n//                 {!showModal && (\n//                     <button onClick={this.toggleModal} type=\"button\">\n//                         Open modal\n//                     </button>\n//                 )}\n//                 {showModal && (\n//                     <Modal onCloseModal={this.toggleModal}>\n//                         <button onClick={this.toggleModal}>Close modal</button>\n//                         <h1>Modal title</h1>\n//                         <p>Modal text lorem lorem lorem lorem</p>\n//                         <form>\n//                             <input type=\"text\" />\n//                             <button type=\"submit\">Send form</button>\n//                         </form>\n//                     </Modal>\n//                 )}\n//             </Layout>\n//         );\n//     }\n// }\n// import React, { Component } from \"react\";\n// export default class App extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             name: \"Vova\",\n//         };\n//         console.log(\"Constructor\");\n//     }\n//     componentDidMount() {\n//         console.log(\"componentDidMount\");\n//         // http requests\n//         // spiner, loader\n// get fromLS\n//         // addEventListeners\n//         // this.setState()\n//     }\n//     // Вызывается когда пришли новые пропы или поменялся state\n//     componentDidUpdate(prevProps, prevState) {\n//         console.log(\"componentDidUpdate\");\n//     }\n//     // Вызывается когда компонент удаляется из DOM\n//     componentWillUnmount() {\n//           // http requests\n//             // removeEventListeners\n//             // снимаем счетчики таймеры и т.д.\n//             // cледим за утечкой памяти\n//     }\n//     render() {\n//         console.log(\"Render\");\n//         return <div>Разметка и сомпоненты</div>;\n//     }\n// }","map":{"version":3,"sources":["/home/homepc/Documents/courses/skillup/2107_jul_2021_JS/06-lesson. REST_API/lesson-06/src/components/App.js"],"names":["React","Component","Layout","Tabs","tabs","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACvCK,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEF;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAPsC,C,CAU3C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"./Layout\";\n// import Tasks from \"./Tasks/\";\n// import Modal from \"./Modal\";\n// import Clock from \"./Clock\";\nimport Tabs from \"./Tabs\";\nimport tabs from \"../tabs.json\";\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Layout>\n                <Tabs items={tabs} />\n            </Layout>\n        );\n    }\n}\n\n// Timer\n// export default class App extends Component {\n//     state = {\n//         showClock: false,\n//     };\n\n//     toggleClock = () => {\n//         this.setState((prevState, props) => {\n//             return {\n//                 showClock: !prevState.showClock,\n//             };\n//         });\n//     };\n\n//     render() {\n//         let { showClock } = this.state;\n\n//         return (\n//             <Layout>\n//                 {!showClock && (\n//                     <button type=\"button\" onClick={this.toggleClock}>\n//                         Close Clock\n//                     </button>\n//                 )}\n\n//                 {!showClock && <Clock />}\n//             </Layout>\n//         );\n//     }\n// }\n\n// Modal\n// export default class App extends Component {\n//     state = {\n//         showModal: false,\n//     };\n\n//     toggleModal = () => {\n//         this.setState((prevState, props) => {\n//             return {\n//                 showModal: !prevState.showModal,\n//             };\n//         });\n//     };\n\n//     render() {\n//         let { showModal } = this.state;\n\n//         return (\n//             <Layout>\n//                 {/* <Tasks /> */}\n\n//                 {!showModal && (\n//                     <button onClick={this.toggleModal} type=\"button\">\n//                         Open modal\n//                     </button>\n//                 )}\n\n//                 {showModal && (\n//                     <Modal onCloseModal={this.toggleModal}>\n//                         <button onClick={this.toggleModal}>Close modal</button>\n//                         <h1>Modal title</h1>\n//                         <p>Modal text lorem lorem lorem lorem</p>\n\n//                         <form>\n//                             <input type=\"text\" />\n//                             <button type=\"submit\">Send form</button>\n//                         </form>\n//                     </Modal>\n//                 )}\n//             </Layout>\n//         );\n//     }\n// }\n\n// import React, { Component } from \"react\";\n// export default class App extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             name: \"Vova\",\n//         };\n\n//         console.log(\"Constructor\");\n//     }\n\n//     componentDidMount() {\n//         console.log(\"componentDidMount\");\n//         // http requests\n//         // spiner, loader\n// get fromLS\n//         // addEventListeners\n//         // this.setState()\n//     }\n\n//     // Вызывается когда пришли новые пропы или поменялся state\n//     componentDidUpdate(prevProps, prevState) {\n//         console.log(\"componentDidUpdate\");\n//     }\n\n//     // Вызывается когда компонент удаляется из DOM\n//     componentWillUnmount() {\n//           // http requests\n//             // removeEventListeners\n//             // снимаем счетчики таймеры и т.д.\n//             // cледим за утечкой памяти\n//     }\n\n//     render() {\n//         console.log(\"Render\");\n//         return <div>Разметка и сомпоненты</div>;\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}